[["foundational-concepts.html", "Foundational Concepts", " Foundational Concepts "],["geocomputation-an-introduction.html", "1 Geocomputation: An Introduction 1.1 Reading list 1.2 Getting started 1.3 Software 1.4 Before you leave", " 1 Geocomputation: An Introduction This week’s lecture provided you with a thorough introduction on Geocomputation, outlining how and why it is different to a traditional GIScience course. We set the scene for the remainder of the module and explained how the foundational concepts that you will learn in the first half of term sit within the overall module. This week we start easy by setting up our work environment and set up the software that we will need over the coming weeks. 1.1 Reading list Essential readings Brundson, C. and Comber, A. 2020. Opening practice: Supporting reproducibility and critical spatial data science. Journal of Geographical Systems 23: 477–496. [Link] Longley, P. et al. 2015. Geographic Information Science &amp; Systems, Chapter 1: Geographic Information: Science, Systems, and Society. [Link] Singleton, A. and Arribas-Bel, D. 2019. Geographic Data Science. Geographical Analysis. [Link] Suggested readings Miller, H. and Goodchild, M. 2015. Data-driven geography. GeoJournal 80: 449–461. [Link] Goodchild, M. 2009. Geographic information systems and science: Today and tomorrow. Annals of GIS 15(1): 3-9. [Link] 1.2 Getting started Over the next few weeks, we will be taking a closer look at many of the foundational concepts that will ultimately enable you to confidently and competently analyse spatial data using both programming and GIS software. You will further learn how to plan, structure and conduct your own spatial analysis using programming – whilst making decisions on how to best present your work, which is a crucial aspect of any type of investigation but of particular relevance to your dissertation. To help with this, we highly recommend that you try to stay organised with your work, including taking notes and making yourself a coding handbook. We would also suggest to list the different datasets you come across - and importantly, the scales and different projections you use them at - more on this over the next weeks. Finally, you should also make notes about the different spatial analysis techniques you come across, including the different properties they assess and parameters they require to run. 1.3 Software This course primarily uses the R programming language, although we start by using QGIS in the next two weeks to give you a basic foundation in the principles of spatial analysis. Note Please follow the instructions below to install both R and QGIS onto your own personal computer. If you cannot install the software on your personal computer or you are not planning to bring your own laptop to the computer practicals, please refer to the UCL Desktop and RStudio Server section below. Please make sure that you have access to a working installation of QGIS and R (including relevant packages) before the first hands-on practical session next week. 1.3.1 QGIS Installation QGIS is an open-source graphic user interface GIS with many community developed add-on packages (or plugins) that provide additional functionality to the software. You can download and install QGIS on your personal machine by going to the QGIS website: [Link]. Note We recommend installing the Long Term Release (QGIS 3.22 LTR) as this version should be the most stable version. For Windows users: the QGIS installation may be a little slow. After installation, start QGIS to see if the installation was successful and no errors are shown after start up. 1.3.2 R and RStudio Installation R is both a programming language and software environment - in the form of RStudio- originally designed for statistical computing and graphics. R’s great strength is that it is open-source, can be used on any computer operating system, and is free for anyone to use and contribute to. Because of this, it is rapidly becoming the statistical language of choice for many academics and has a very large user community with people constantly contributing new packages to carry out all manner of statistical, graphical, and importantly for us, geographical tasks. Installing R takes a few relatively simple steps involving two programmes. First there is the R programme itself. Follow these steps to get it installed on your computer: Navigate in your browser to your nearest CRAN mirror: [Link] If you use a Windows computer, click on Download R for Windows. Then click on base. Download and install R 4.2.x for Windows. If you use a Mac computer, click on Download R for macOS and download and install R-4.2.x.pkg That is it! You now have installed the latest version of R on your own machine. However, to make working with R a little bit easier we also need to install something called an Integrated Development Environment (IDE). We will use RStudio: Navigate to the official webpage of RStudio: [Link] Download and install RStudio Desktop on your computer (free version!) After this, start RStudio to see if the installation was successful and no errors are shown after start up. 1.3.3 UCL Desktop and RStudio Server As an alternative to installing QGIS and R with RStudio onto your personal device, there are some other options. Firstly, both programmes are available through Desktop@UCL Anywhere as well as all UCL computers on campus. In case of R, there is also an RStudio server version available which you can access through your web browser: [Link] You should be able to log in with your normal UCL username and password. After logging in, you should see the RStudio interface appear. Figure 1.1: The RStudio Server interface. Note If it is the first time you log on to RStudio server you may only see the RStudio interface appear once you have clicked on the start a new session button. More importantly: if you are not on campus, RStudio server will only work with an active Virtual Private Network (VPN) connection that links your personal computer into UCL’s network. Details on setting up a VPN connection can be found in UCL’s VPN connection guides: [Link] 1.3.4 R package installation Now we have installed or have access to QGIS and R, we need to customise R. Many useful R function come in packages, these are free libraries of code written and made available by other by R users. This includes packages specifically developed for data cleaning, data wrangling, visualisation, mapping, and spatial analysis. To save us some time, we will install all R packages that we will need over the next ten weeks in one go. Without going into detail on the RStudio (Server) interface, copy and paste the following code into the console. You can execute the code by hitting Enter. This may take a while. # install all packages that we need install.packages(c(&quot;tidyverse&quot;, &quot;sf&quot;, &quot;tmap&quot;, &quot;osmdata&quot;, &quot;RColorBrewer&quot;, &quot;janitor&quot;, &quot;spdep&quot;, &quot;dbscan&quot;, &quot;raster&quot;, &quot;spatstat&quot;, &quot;gstat&quot;, &quot;dodgr&quot;)) Once you have installed the packages, we need to check whether we can in fact load them into our R session. Copy and paste the following code into the console, and executed by hitting Enter again. # load all packages library(tidyverse) library(sf) library(tmap) library(osmdata) library(RColorBrewer) library(janitor) library(spdep) library(dbscan) library(raster) library(spatstat) library(gstat) library(dodgr) You will see some information printed to your console but as long as you do not get a message that is similar to Error: package or namespace load failed for &lt;packagename&gt; or Error: package '&lt;packagename' could not be loaded all should be fine. Note Even if you have used R or RStudio Server before and already installed some of the packages in the above list, do re-install all packages to make sure you have the latest versions. Legacy installations that have not been updated may lay lead to problems when going through the tutorials. 1.3.5 A note on ArcGIS ArcGIS Pro (previously ArcMap) is the main commercial GIS software that you may have already used - or seen/heard about through other modules or even job adverts. We do not use ArcGIS Pro in our Practicals for several reasons: Computing requirements for ArcGIS Pro are substantial and it only operates on the Windows Operating System. For Mac users, using ArcGIS Pro (and ArcMap) would require using either a Virtual Machine or running a copy of Windows OS on a separate partition of your hard drive. It is proprietary software, which means you need a license to use the software. For those of us in education, the University covers the cost of this license, but when you leave, you will need to pay for a personal license (around £100 for non-commercial use) to continue using the software and repeat any analysis you have used the software for. Whilst ArcPro can use pure Python (and even R) as a programming language within it through scripts and notebooks, it primarily relies on its own ArcPy and ArcGIS API for Python packages to run the in-built tools and analytical functions. To use these packages, you still need a license which makes it difficult to share your code with others if they do not have their own ArcGIS license. Recent developments in the ArcPro software, however, does make it an attractive tool for spatial data science and quantitative geography - it has cross-user functionality, from data analysts who like to use a tool called Notebooks for their code development, to those focused more on cartography and visualisation with in-built bridges to Adobe’s Creative Suite. We therefore do not want to put you off looking into ArcGIS in the future, but for this course, we want to ensure the reproducibility of your work. Note This also means that the analysis you will be doing for your coursework assignment must be completed in R and QGIS. Specific guidance on the coursework assignment and permitted software will be made available at the end of Reading Week. 1.4 Before you leave You should now be all ready to go with the computer practicals the coming week. That is it for this week! "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
